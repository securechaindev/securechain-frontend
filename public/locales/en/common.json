{
  "heroBadge": "Open Source • Cybersecurity • Supply Chain",
  "heroTitle": "Enhancing Software Supply Chain Security",
  "heroDescription": "Comprehensive tools for dependency analysis and vulnerability assessment. Secure your software supply chain with advanced dependency exploration and VEX document generation.",
  "loginButton": "Try Now",
  "apiDocsButton": "API Docs",
  "toolsTitle": "Our Security Tools",
  "toolsDescription": "Two powerful open-source tools designed to work together for comprehensive supply chain security",
  "depexTitle": "Depex",
  "depexDescription": "Dependency Explorer & Vulnerability Detector",
  "depexFullDescription": "Constructs full dependency graphs from package manifests (npm, pip, Maven, etc.) and detects vulnerable transitive dependencies. Visualizes them in Neo4j for comprehensive analysis.",
  "depexFeaturesTitle": "Key Features",
  "depexFeature1": "Multi-language package support",
  "depexFeature2": "Transitive dependency detection",
  "depexFeature3": "Neo4j graph visualization",
  "depexFeature4": "Vulnerability scanning",
  "viewDepexButton": "View Depex",
  "vexgenTitle": "VEXGen",
  "vexgenDescription": "Automated VEX Document Generator",
  "vexgenFullDescription": "Automated tool that generates VEX (Vulnerability Exploitability eXchange) documents indicating exploitability status for software artifacts, integrating with OSV and SBOMs.",
  "vexgenFeaturesTitle": "Key Features",
  "vexgenFeature1": "Automated VEX generation",
  "vexgenFeature2": "OSV database integration",
  "vexgenFeature3": "SBOM compatibility",
  "vexgenFeature4": "Exploitability assessment",
  "viewVEXGenButton": "View VEXGen",
  "howTheyWorkTitle": "How They Work Together",
  "howTheyWorkDescription": "Depex and VEXGen complement each other to provide comprehensive supply chain security",
  "diagramExplanationTitle": "Understanding the Secure Chain Workflow",
  "diagramExplanationText": "This diagram illustrates the integrated workflow of Depex and VEXGen within Secure Chain. Requirement files (like SBOM, pom, txt) are fed into Secure Chain. Depex handles graph building, visualization, vulnerability attribution, and solver reasoning, leading to outputs like graphs, vulnerabilities, and dependency configurations. VEXGen performs static code analysis, integrates intelligence threat information, and generates VEX documents. This combined approach ensures a comprehensive security analysis of your software supply chain.",
  "architectureTitle": "System Architecture",
  "architectureDescription": "An overview of Secure Chain's robust and scalable microservices architecture.",
  "architectureDiagramExplanationTitle": "Secure Chain's Integrated Architecture",
  "architectureDiagramExplanationText": "The Secure Chain architecture is designed for scalability and efficiency. A Developer User interacts with the Next.js FrontEnd, which is served statically by Nginx, and which communicates with a Gateway BackEnd. This gateway routes requests to various FastAPI BackEnd Microservices, including Auth BackEnd for authentication, Depex BackEnd for dependency analysis, and VEXGen BackEnd for VEX document generation. These microservices leverage a Mongo Vulnerability Database for vulnerability data and a Neo4j Graph Database for dependency graph storage, ensuring comprehensive and performant security analysis.",
  "useCasesTitle": "Use Cases",
  "useCasesDescription": "Real-world applications for enhanced supply chain security",
  "enterpriseSecurityTitle": "Enterprise Security",
  "enterpriseSecurityText": "Large organizations can audit their entire software portfolio for vulnerabilities and maintain compliance documentation.",
  "cicdIntegrationTitle": "CI/CD Integration",
  "cicdIntegrationText": "Integrate into your development pipeline for automated vulnerability scanning and VEX document generation on every build.",
  "openSourceProjectsTitle": "Open Source Projects",
  "openSourceProjectsText": "Maintainers can provide transparency about their project's security posture and dependency health to users.",
  "supportersTitle": "Our Supporters",
  "supportersDescription": "Secure Chain is proudly supported by leading research institutions committed to advancing cybersecurity",
  "ideaTitle": "IDEA Research Group",
  "ideaLocation": "University of Seville",
  "ideaText": "Leading research in software engineering, data analysis, and intelligent systems with a focus on innovative solutions for complex technological challenges.",
  "visitIdeaButton": "Visit IDEA",
  "i3usTitle": "I3US Institute",
  "i3usLocation": "Institute of Computer Engineering, University of Seville",
  "i3usText": "Dedicado al avance de la investigación e innovación, fomentando la colaboración entre la academia y la industria en el desarrollo de tecnología de vanguardia.",
  "visitI3usButton": "Visit I3US",
  "supportersFooterText": "These institutions provide invaluable support through research collaboration, academic expertise, and commitment to open-source cybersecurity advancement.",
  "contactTitle": "Get in Touch",
  "contactDescription": "Have questions, feedback, or want to collaborate? Reach out to us!",
  "contactGetInTouchText": "Get in touch with us:",
  "contactButton": "Contact Us",
  "githubOrgLink": "GitHub Organization",
  "zenodoOrgLink": "Zenodo Organization",
  "documentationLink": "General Documentation",
  "zenodoDataDumpTitle": "Secure Chain Data Dumps",
  "zenodoDataDumpDescription": "This repository contains files and scripts to initialize and populate Secure Chain's databases. It includes information on ~270,000 vulnerabilities and ~260,000 exploits. The second database holds a dependency graph with ~4.4M packages and ~64.6M versions from NPM, PyPI, Ruby Gems, Cargo Crates, and partially Maven.",
  "viewDataDumpButton": "View Data Dump",
  "openSourceBadge": "Open Source",
  "gnuLicensedBadge": "GNU Licensed",
  "communityDrivenBadge": "Community Driven",
  "footerDescription": "Open-source tools for software supply chain security.",
  "footerCopyright": "© 2024 Secure Chain. Open source under GNU License.",
  "submitModalTitle": "Submit Repository for Analysis",
  "submitModalDescription": "Enter the GitHub repository details you'd like us to analyze for security vulnerabilities and dependencies. We'll respond as soon as possible with the analysis results.",
  "ownerLabel": "Repository Owner",
  "repoNameLabel": "Repository Name",
  "repoNamePlaceholder": "e.g., react, tensorflow, kubernetes",
  "emailLabel": "Your Email Address",
  "emailHelperText": "We'll send the analysis results to this email address",
  "repoUrlPrefix": "Repository URL:",
  "cancelButton": "Cancel",
  "submitButton": "Submit for Analysis",
  "submittingButton": "Submitting...",
  "toastErrorTitle": "Error",
  "toastErrorDescription": "Please fill in all fields including your email address.",
  "toastInvalidEmailTitle": "Invalid Email",
  "toastInvalidEmailDescription": "Please enter a valid email address.",
  "toastSuccessTitle": "Repository Submitted Successfully! ✅",
  "toastSuccessDescription": "We've received your submission for {{owner}}/{{repoName}}. Analysis results will be sent to {{email}}.",
  "toastSubmissionFailedTitle": "Submission Failed",
  "toastSubmissionFailedDescription": "{{error}}",
  "submitRepoButton": "Submit Repository",
  "homePageWelcome": "Welcome to the Home Page!",
  "sendButton": "Send Message",
  "sendingButton": "Sending...",
  "contactModalTitle": "Get in Touch",
  "contactModalDescription": "Have questions, feedback, or want to collaborate? Send us a message!",
  "emailPlaceholder": "your.email@example.com",
  "subjectLabel": "Subject",
  "subjectPlaceholder": "What's this about?",
  "messageLabel": "Message",
  "messagePlaceholder": "Tell us more about your inquiry...",
  "contactEmailHelperText": "We'll get back to you as soon as possible",
  "contactToastSuccessTitle": "Message Sent Successfully! ✅",
  "contactToastSuccessDescription": "We've received your message and will get back to you soon.",
  "contactToastSubmissionFailedDescription": "Something went wrong. Please try again later.",

  "authDemoTitle": "Try Secure Chain Beta",
  "authDemoDescription": "Test our authentication system",
  "loginTab": "Login",
  "signupTab": "Sign Up",
  "passwordPlaceholder": "Enter your password",
  "confirmPasswordLabel": "Confirm Password",
  "confirmPasswordPlaceholder": "Confirm your password",
  "createPasswordPlaceholder": "Create a password",
  "loggingInButton": "Logging in...",
  "createAccountButton": "Create Account",
  "creatingAccountButton": "Creating account...",

  "welcomeTitle": "Welcome to Secure Chain Beta",
  "welcomeDescription": "You are successfully authenticated! Explore the authentication features below.",
  "logoutButton": "Logout",
  "authenticatedStatus": "Authenticated",
  "sessionActiveStatus": "Session active",
  "userIdLabel": "User ID",
  "tokenActiveLabel": "Token Active",
  "jwtSecuredLabel": "JWT secured",

  "checkAccountTitle": "Check Account Existence",
  "checkAccountDescription": "Verify if an email address has an account",
  "emailAddressLabel": "Email Address",
  "emailAddressPlaceholder": "email@example.com",
  "checkAccountButton": "Check Account",
  "checkingButton": "Checking...",

  "changePasswordTitle": "Change Password",
  "changePasswordDescription": "Update your account password",
  "currentPasswordLabel": "Current Password",
  "currentPasswordPlaceholder": "Enter current password",
  "newPasswordLabel": "New Password",
  "newPasswordPlaceholder": "Enter new password",
  "changePasswordButton": "Change Password",
  "changingPasswordButton": "Changing...",

  "tokenVerificationTitle": "Token Verification",
  "tokenVerificationDescription": "Verify the validity of a JWT token",
  "jwtTokenLabel": "JWT Token",
  "jwtTokenPlaceholder": "Paste JWT token here",
  "jwtTokenHelperText": "Try pasting your current token:",
  "verifyTokenButton": "Verify Token",
  "verifyingTokenButton": "Verifying...",

  "refreshTokenTitle": "Refresh Token",
  "refreshTokenDescription": "Refresh your access token using refresh token",
  "currentTokenLabel": "Current Token",
  "refreshTokenButton": "Refresh Token",
  "refreshingTokenButton": "Refreshing...",

  "apiEndpointsTitle": "Available API Endpoints",
  "apiEndpointsDescription": "Test all the authentication endpoints in our beta",
  "createAccountEndpoint": "Create account",
  "userAuthEndpoint": "User authentication",
  "endSessionEndpoint": "End session",
  "checkAccountEndpoint": "Check account",
  "updatePasswordEndpoint": "Update password",
  "verifyJwtEndpoint": "Verify JWT",
  "renewAccessEndpoint": "Renew access",

  "errorTitle": "Error",
  "fillAllFieldsError": "Please fill in all fields",
  "passwordMismatchTitle": "Password Mismatch",
  "passwordMismatchError": "Passwords do not match",
  "loginSuccessTitle": "Login Successful! ✅",
  "loginSuccessDescription": "Welcome to Secure Chain Beta",
  "loginFailedTitle": "Login Failed",
  "invalidCredentialsError": "Invalid credentials",
  "loginErrorTitle": "Login Error",
  "networkErrorDescription": "Network error occurred",
  "signupErrorTitle": "Signup Error",
  "accountCreatedTitle": "Account Created! ✅",
  "accountCreatedDescription": "You can now login with your credentials",
  "signupFailedTitle": "Signup Failed",
  "createAccountFailedError": "Failed to create account",
  "error": "Error",
  "httpError": "HTTP Error",
  "success": "Success",
  "close": "Close",
  "showing": "Showing {{count}}",
  "unsupportedOperationType": "Unsupported operation type",
  "loggedOutTitle": "Logged Out",
  "loggedOutDescription": "You have been successfully logged out",
  "logoutErrorTitle": "Logout Error",
  "logoutErrorDescription": "Error occurred during logout",
  "enterEmailError": "Please enter an email address",
  "checkFailedTitle": "Check Failed",
  "accountFoundTitle": "Account Found ✅",
  "accountNotFoundTitle": "Account Not Found ❌",
  "passwordChangedTitle": "Password Changed! ✅",
  "passwordChangedDescription": "Your password has been updated successfully",
  "passwordChangeFailedTitle": "Password Change Failed",
  "passwordChangeErrorTitle": "Password Change Error",
  "enterTokenError": "Please enter a token",
  "tokenCheckErrorTitle": "Token Check Error",
  "tokenValidTitle": "Token Valid ✅",
  "tokenInvalidTitle": "Token Invalid ❌",
  "tokenRefreshedTitle": "Token Refreshed! ✅",
  "tokenRefreshedDescription": "Your access token has been renewed",
  "refreshFailedTitle": "Refresh Failed",
  "refreshErrorTitle": "Refresh Error",

  "backToLanding": "Back to Landing",

  "homeDashboardTitle": "Secure Chain Dashboard",
  "homeDashboardDescription": "Access your security tools and manage your authenticated session",
  "quickAccessTitle": "Quick Access",
  "quickAccessDescription": "Jump directly to your security analysis tools",
  "depexToolTitle": "Depex Tool",
  "depexToolDescription": "Dependency analysis and vulnerability detection",
  "accessDepexButton": "Access Depex",
  "vexgenToolTitle": "VEXGen Tool",
  "vexgenToolDescription": "Generate VEX documents for your projects",
  "accessVexgenButton": "Access VEXGen",
  "goToLoginTitle": "Authentication Required",
  "goToLoginDescription": "Please log in to access the dashboard",
  "goToLoginButton": "Go to Login",
  "loadingDashboard": "Loading dashboard...",

  "depexPageTitle": "Depex: Dependency Explorer",
  "repositoriesTab": "Repositories",
  "packagesTab": "Packages",
  "initializationTab": "Initialization",
  "yourRepositoriesTitle": "Your Repositories",
  "yourRepositoriesDescription": "View and manage repositories analyzed by Depex for user:",
  "refreshRepositoriesButton": "Refresh Repositories",
  "noRepositoriesFound": "No repositories found for this user. Try initializing one!",
  "complete": "Complete",
  "incomplete": "Incomplete",
  "requirementFiles": "Requirement Files",
  "files": "Files",
  "noRequirementFilesFound": "No requirement files found",
  "noFilesFound": "No files found",
  "packageVersionStatusTitle": "Package & Version Status",
  "checkPackageStatusTitle": "Check Package Status",
  "packageNameLabel": "Package Name",
  "packageNamePlaceholder": "e.g., react",
  "packageNameRequired": "Package name is required",
  "checkPackageStatusButton": "Check Package Status",
  "checkVersionStatusTitle": "Check Version Status",
  "packageVersionLabel": "Package Version",
  "packageVersionPlaceholder": "e.g., 18.2.0",
  "checkVersionStatusButton": "Check Version Status",
  "initializeDataTitle": "Initialize Data",
  "initializeRepositoryTitle": "Initialize Repository",
  "repositoryOwnerLabel": "Repository Owner",
  "repositoryOwnerPlaceholder": "e.g., vercel",
  "repositoryNameLabel": "Repository Name",
  "repositoryNamePlaceholder": "e.g., next.js",
  "initializeRepositoryButton": "Initialize Repository",
  "initializePackageTitle": "Initialize Package",
  "initPackageNamePlaceholder": "e.g., lodash",
  "initializePackageButton": "Initialize Package",
  "initializeVersionTitle": "Initialize Version",
  "initPackageVersionPlaceholder": "e.g., 4.17.21",
  "initializeVersionButton": "Initialize Version",
  "repositoryInitialized": "Repository Initialized",
  "packageInitialized": "Package Initialized",
  "initializePackageModalTitle": "Initialize Package",
  "initializePackageModalDescription": "The package \"{packageName}\" does not exist. Would you like to initialize it?",
  "initializingPackage": "Initializing...",
  "versionInitialized": "Version Initialized",
  "packageStatus": "Package Status",
  "versionStatus": "Version Status",
  "loadingText": "Loading...",

  "contactApiErrors": {
    "missingFields": "Email, subject, and message are required",
    "invalidEmail": "Invalid email format",
    "serviceNotConfigured": "Email service not configured",
    "serviceFailed": "Failed to send message. Please try again later."
  },
  "contactApiSuccess": {
    "messageSent": "Message sent successfully!"
  },

  "authApiErrors": {
    "networkError": "Failed to connect to authentication service",
    "serverError": "Authentication service is temporarily unavailable",
    "invalidCredentials": "Invalid email or password",
    "userNotFound": "User not found",
    "userAlreadyExists": "An account with this email already exists",
    "emailRequired": "Email is required",
    "passwordRequired": "Password is required",
    "invalidEmail": "Please enter a valid email address",
    "passwordTooShort": "Password must be at least 8 characters long",
    "tokenExpired": "Your session has expired. Please log in again",
    "invalidToken": "Invalid authentication token",
    "unauthorized": "You are not authorized to perform this action",
    "refreshTokenRequired": "Refresh token is required for token renewal"
  },
  "authApiSuccess": {
    "loginSuccess": "Login successful",
    "signupSuccess": "Account created successfully",
    "logoutSuccess": "Logged out successfully",
    "passwordChanged": "Password changed successfully",
    "tokenRefreshed": "Session refreshed successfully"
  },

  "depexApiErrors": {
    "networkError": "Failed to connect to Depex service",
    "serverError": "Depex service is temporarily unavailable",
    "repositoryNotFound": "Repository not found",
    "packageNotFound": "Package not found",
    "versionNotFound": "Version not found",
    "invalidParameters": "Invalid parameters provided",
    "initializationFailed": "Failed to initialize resource",
    "unauthorized": "You are not authorized to access this resource"
  },
  "depexApiSuccess": {
    "repositoryInitialized": "Repository initialized successfully",
    "packageInitialized": "Package initialized successfully",
    "versionInitialized": "Version initialized successfully",
    "statusRetrieved": "Status retrieved successfully",
    "operationCompleted": "Operation completed successfully"
  },

  "docs": {
    "backToHome": "Back to Home",
    "apiDocumentationBadge": "API Documentation",
    "title": "Secure Chain API Gateway",
    "subtitle": "Complete API documentation for authentication and dependency exploration services",
    "viewOnGitHub": "View on GitHub",
    "overview": "Overview",
    "auth": "Auth",
    "graph": "Graph",
    "fileOps": "File Ops",
    "configOps": "Config Ops",
    "schemas": "Schemas",
    "apiInformation": "API Information",
    "version": "Version",
    "openapi": "OpenAPI",
    "baseUrl": "Base URL",
    "authentication": "Authentication",
    "jwtBearerToken": "JWT Bearer Token",
    "authenticationTitle": "Authentication",
    "authenticationDescription": "Secure user authentication with JWT tokens, including signup, login, logout, and password management.",
    "dependencyGraphTitle": "Dependency Graph",
    "dependencyGraphDescription": "Explore and manage dependency graphs for repositories, packages, and versions across multiple ecosystems.",
    "fileOperationsTitle": "File Operations",
    "fileOperationsDescription": "File analysis operations including dependency graph validation, impact analysis, and configuration filtering.",
    "configOperationsTitle": "Config Operations",
    "configOperationsDescription": "Configuration management operations for validation, completion, and impact-based recommendations.",
    "supportedEcosystems": "Supported Package Ecosystems",
    "authEndpoints": "Authentication Endpoints",
    "authEndpointsDescription": "Secure user authentication and account management",
    "graphEndpoints": "Dependency Graph Endpoints",
    "graphEndpointsDescription": "Manage repositories, packages, and versions in the dependency graph",
    "fileEndpoints": "File Operation Endpoints",
    "fileEndpointsDescription": "Advanced operations for file analysis, graph validation, and impact analysis",
    "configEndpoints": "Configuration Operation Endpoints",
    "configEndpointsDescription": "Configuration management operations for validation, completion, and recommendations",
    "requestSchemas": "Request Schemas",
    "requestSchemasDescription": "Data structures for API requests and responses",
    "enumerations": "Enumerations",
    "enumerationsDescription": "Predefined value sets used across the API",
    "fields": "Fields",
    "authRequired": "Auth Required",
    "endpoints": "endpoints",
    "footerText": "Complete API documentation for the Secure Chain platform",
    "userSignup": "User Signup",
    "userSignupDescription": "Create a new user account.",
    "userLogin": "User Login",
    "userLoginDescription": "Authenticate a user with email and password.",
    "userLogout": "User Logout",
    "userLogoutDescription": "Log out a user and revoke their refresh token.",
    "accountExists": "User Account Existence Check",
    "accountExistsDescription": "Check if a user account exists with the given email.",
    "changePassword": "User Change Password",
    "changePasswordDescription": "Change the password for a user.",
    "checkToken": "User Token Verification",
    "checkTokenDescription": "Verify the validity of a user token.",
    "refreshToken": "User Refresh Token",
    "refreshTokenDescription": "Refresh a user's access token using a refresh token.",
    "healthCheck": "Health Check",
    "healthCheckDescription": "Check the status of the API.",
    "getRepositories": "Get Repositories",
    "getRepositoriesDescription": "Get all repositories for a specific user.",
    "getPackageStatus": "Get Package Status",
    "getPackageStatusDescription": "Get the status of a specific package by node type and package name.",
    "getVersionStatus": "Get Version Status",
    "getVersionStatusDescription": "Get the status of a specific package version.",
    "initVersion": "Init Version",
    "initVersionDescription": "Initialize a new package version in the system.",
    "initPackage": "Init Package",
    "initPackageDescription": "Initialize a new package in the system.",
    "initRepository": "Init Repository",
    "initRepositoryDescription": "Initialize a new repository in the system.",
    "fileInfo": "File Info",
    "fileInfoDescription": "Get information about a requirement file.",
    "validGraph": "Valid Graph",
    "validGraphDescription": "Validate a dependency graph for a requirement file.",
    "minimizeImpact": "Minimize Impact",
    "minimizeImpactDescription": "Find configurations that minimize dependency impact.",
    "maximizeImpact": "Maximize Impact",
    "maximizeImpactDescription": "Find configurations that maximize dependency impact.",
    "filterConfigs": "Filter Configs",
    "filterConfigsDescription": "Filter configurations based on impact thresholds.",
    "validConfig": "Valid Config",
    "validConfigDescription": "Validate a specific configuration.",
    "completeConfig": "Complete Config",
    "completeConfigDescription": "Complete a partial configuration with optimal values.",
    "configByImpact": "Config By Impact",
    "configByImpactDescription": "Get configuration recommendations based on impact level.",
    "signUpRequestDescription": "Request schema for user signup",
    "loginRequestDescription": "Request schema for user login",
    "accountExistsRequestDescription": "Request schema for checking account existence",
    "changePasswordRequestDescription": "Request schema for changing password",
    "verifyTokenRequestDescription": "Request schema for token verification",
    "initRepositoryRequestDescription": "Request schema for repository initialization",
    "initPackageRequestDescription": "Request schema for package initialization",
    "initVersionRequestDescription": "Request schema for version initialization",
    "fileInfoRequestDescription": "Request schema for file information",
    "validGraphRequestDescription": "Request schema for graph validation",
    "minMaxImpactRequestDescription": "Request schema for minimize/maximize impact operations",
    "filterConfigsRequestDescription": "Request schema for filtering configurations",
    "validConfigRequestDescription": "Request schema for configuration validation",
    "completeConfigRequestDescription": "Request schema for completing configurations",
    "configByImpactRequestDescription": "Request schema for configuration by impact",
    "nodeTypeDescription": "Supported package ecosystem types",
    "agregatorDescription": "Aggregation methods for impact calculations",
    "getRepositoryDetails": "Get Repository",
    "getRepositoryDetailsDescription": "Get the details of a specific repository.",
    "depexAnalyze": "DEPEX Analyze",
    "depexAnalyzeDescription": "Start or get the status of a DEPEX analysis for a repository.",
    "deleteRepository": "Delete Repository",
    "deleteRepositoryDescription": "Delete a repository and all associated data.",
    "packageDetailsTitle": "Package Details",
    "packageBackToHome": "Back to Home",
    "loadingPackageDetails": "Loading package details...",
    "packageNotFound": "Package Not Found",
    "packageDetailsCouldNotBeLoaded": "The package details could not be loaded.",
    "vendor": "Vendor",
    "importName": "Import Name",
    "totalVersions": "Total Versions",
    "lastUpdated": "Last Updated",
    "versions": "Versions",
    "sortByDate": "Sort by Date",
    "sortBySemver": "Sort by Version",
    "sortByVulnerabilities": "Sort by Vulnerabilities",
    "sortByScore": "Sort by Score",
    "sortAscending": "Asc",
    "sortDescending": "Desc",
    "critical": "Critical",
    "high": "High",
    "medium": "Medium",
    "low": "Low",
    "noDate": "No date",
    "serial": "Serial",
    "weightedMean": "Weighted Mean",
    "meanScore": "Mean Score",
    "vulnerabilities": "Vulnerabilities",
    "searchVersions": "Search versions by name (e.g., 1.25.3, 2.0)...",
    "noVersionsFound": "No versions found matching",
    "versionsOf": "of",
    "errorLoadingPackage": "Error",
    "failedToLoadPackageDetails": "Failed to load package details",
    "authLoading": "Verifying authentication...",

    "authErrorCodes": {
      "userAlreadyExists": "An account with this email already exists",
      "userNotFound": "User not found",
      "incorrectPassword": "Incorrect password",
      "invalidOldPassword": "Current password is invalid",
      "passwordMismatch": "Passwords do not match",
      "missingRefreshToken": "Refresh token is missing",
      "tokenRevoked": "Session has been revoked",
      "tokenMissing": "Authentication token is missing",
      "tokenExpired": "Your session has expired. Please log in again",
      "tokenInvalid": "Invalid authentication token",
      "tokenError": "Authentication error occurred",
      "networkError": "Network connection error",
      "serverError": "Server temporarily unavailable",
      "unknownError": "An unexpected error occurred"
    },

    "authSuccessCodes": {
      "signupSuccess": "Account created successfully",
      "loginSuccess": "Welcome! Login successful",
      "logoutSuccess": "You have been logged out successfully",
      "changePasswordSuccess": "Your password has been updated successfully",
      "accountExistsSuccess": "Account verification completed",
      "tokenVerificationSuccess": "Token is valid",
      "refreshTokenSuccess": "Session refreshed successfully",
      "unknownSuccess": "Operation completed successfully"
    },

    "backendErrorCodes": {
      "validationError": "Invalid request data provided",
      "httpError": "HTTP request error occurred",
      "internalError": "Internal server error occurred"
    },

    "depexErrorCodes": {
      "packageNotFound": "Package not found in the database",
      "versionNotFound": "Version not found for this package",
      "versionAlreadyExists": "Version already exists in the database",
      "noRepo": "Repository not found or not accessible"
    },

    "depexSuccessCodes": {
      "getRepositoriesSuccess": "User repositories retrieved successfully",
      "getPackageStatusSuccess": "Package status retrieved successfully",
      "getVersionStatusSuccess": "Version status retrieved successfully",
      "versionInitializing": "Version initialization process started",
      "packageInitializing": "Package initialization process started",
      "initRepo": "Repository analysis started in background"
    },

    "requirementOperations": {
      "noDependencies": "The requirement file graph has no dependencies",
      "smtTimeout": "Execution timed out after 3 seconds. The complexity of the model is too high, try lowering the maximum level of the graph.",
      "memoryOut": "Graph is too large to extract - memory limit exceeded",
      "memoryOutSuggestion": "Please reduce the Max Level parameter and try again to limit the graph size",
      "networkError": "Service temporarily unavailable",
      "networkErrorSuggestion": "Please try again later",
      "fileInfoSuccess": "File information retrieved successfully",
      "graphValid": "Requirement file graph is valid",
      "graphInvalid": "Requirement file graph is invalid",
      "minimizeSuccess": "Impact minimization completed successfully",
      "maximizeSuccess": "Impact maximization completed successfully",
      "filterSuccess": "Configuration filtering completed successfully",
      "configValid": "Configuration is valid",
      "configInvalid": "Configuration is invalid",
      "completeSuccess": "Configuration completed successfully",
      "configByImpactSuccess": "Configuration by impact completed successfully",
      "invalidConfigurationFormat": "Invalid configuration format. Must be valid JSON.",
      "invalidPartialConfigurationFormat": "Invalid partial configuration format. Must be valid JSON.",
      "impactRequired": "Target impact is required.",
      "impactRangeError": "Target impact must be a number between 0 and 10 inclusive.",
      "analyze": "Analyze",
      "analyzeRequirements": "Analyze Requirements",
      "operationTitle": "Requirement File Operations",
      "operationDescription": "Select and execute operations on the requirement file",
      "selectConfigOperation": "Select Configuration Operation",
      "parametersTitle": "Parameters",
      "configParametersDescription": "Configure parameters for the selected operation",
      "fileOperationsTitle": "File Operations",
      "configOperationsTitle": "Configuration Operations",
      "fileInfoTitle": "Get File Information",
      "fileInfoDescription": "Retrieve detailed dependency information for the requirement file",
      "validGraphTitle": "Validate Graph",
      "validGraphDescription": "Check if the dependency graph is valid and solvable",
      "minimizeImpactTitle": "Minimize Impact",
      "minimizeImpactDescription": "Find configurations that minimize vulnerability impact",
      "maximizeImpactTitle": "Maximize Impact",
      "maximizeImpactDescription": "Find configurations that maximize vulnerability impact",
      "filterConfigsTitle": "Filter Configurations",
      "filterConfigsDescription": "Filter configurations within specified impact thresholds",
      "validConfigTitle": "Validate Configuration",
      "validConfigDescription": "Check if a specific configuration is valid",
      "completeConfigTitle": "Complete Configuration",
      "completeConfigDescription": "Complete a partial configuration with remaining dependencies",
      "configByImpactTitle": "Configuration by Impact",
      "configByImpactDescription": "Generate configuration closest to specified impact level",
      "maxLevelLabel": "Maximum Depth Level",
      "maxLevelHelp": "Maximum depth level for dependency analysis (-1 for unlimited, must be > 0 or -1)",
      "maxLevelError": "Maximum level must be -1 or greater than 0",
      "maxLevelDescription": "Maximum depth level for dependency analysis (-1 for unlimited, must be > 0 or -1)",
      "aggregatorLabel": "Vulnerability Aggregator",
      "aggregatorMean": "Mean",
      "aggregatorMax": "Maximum",
      "aggregatorMin": "Minimum",
      "aggregatorSum": "Sum",
      "aggregatorDescription": "Method for aggregating vulnerability scores",
      "meanOption": "Mean",
      "weightedMeanOption": "Weighted Mean",
      "limitLabel": "Configuration Limit",
      "limitDescription": "Maximum number of configurations to discover (must be > 0)",
      "minThresholdLabel": "Minimum Threshold",
      "minThresholdDescription": "Minimum impact threshold for filtering",
      "maxThresholdLabel": "Maximum Threshold",
      "maxThresholdDescription": "Maximum impact threshold for filtering",
      "impactLabel": "Target Impact",
      "impactHelp": "Target impact level (numeric value between 0 and 10 inclusive)",
      "impactDescription": "Target impact level (0-10) for configuration generation",
      "configurationLabel": "Configuration",
      "configurationHelp": "Dependency configuration in JSON format (package: version pairs)",
      "configurationDescription": "Dependency configuration (package: version pairs)",
      "partialConfigurationLabel": "Partial Configuration",
      "partialConfigurationHelp": "Partial dependency configuration in JSON format to complete",
      "partialConfigLabel": "Partial Configuration",
      "partialConfigDescription": "Partial dependency configuration to complete",
      "executeOperation": "Execute Operation",
      "executeButton": "Execute Operation",
      "executing": "Executing...",
      "clearResults": "Clear Results",
      "results": "Results",
      "noResults": "No results to display",
      "dependencyName": "Dependency",
      "version": "Version",
      "constraints": "Constraints",
      "vendor": "Vendor",
      "vulnerabilityCount": "Vulnerabilities",
      "weightedMean": "Weighted Mean",
      "mean": "Mean Score",
      "directDependencies": "Direct Dependencies",
      "indirectDependencies": "Indirect Dependencies",
      "totalDirect": "Total Direct",
      "totalIndirect": "Total Indirect",
      "depthLevel": "Depth Level",
      "validationResult": "Validation Result",
      "valid": "Valid",
      "invalid": "Invalid",
      "configurations": "Configurations",
      "configuration": "Configuration",
      "impact": "Impact",
      "totalRisk": "Total Risk",
      "individualImpacts": "Individual Impacts",
      "actions": "Actions",
      "versionsTitle": "Available Versions",
      "meanScore": "Mean Score",
      "vulnerabilities": "Vulnerabilities",
      "viewVersions": "View Versions",
      "showLess": "Show less",
      "moreVulnerabilities": "more"
    }
  }
}
