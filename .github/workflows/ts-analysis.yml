name: Code Quality Checks

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']

jobs:
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check
        run: pnpm run type-check

      - name: Lint check
        run: pnpm run lint

      - name: Format check
        run: pnpm run format:check

      - name: Build check
        run: pnpm run build

  pr-comment:
    name: PR Quality Report
    runs-on: ubuntu-latest
    needs: code-quality
    if: github.event_name == 'pull_request' && failure()
    
    steps:
      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ùå **Code Quality Checks Failed**\n\nPlease check the failed workflow and fix the issues:\n- Linting errors\n- Formatting issues\n- Type errors\n- Build errors\n\nRun `pnpm run lint:fix` and `pnpm run format` locally to fix most issues automatically.'
            })
